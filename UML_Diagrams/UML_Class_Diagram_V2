"plantuml.dotPath": "/opt/homebrew/bin/dot" 
// 'options' + 'D' for rendering
@startuml
' Use rectangle style to remove UML2 circled icons
skinparam componentStyle rectangle
skinparam shadowing false
skinparam classAttributeIconSize 0
skinparam linetype polyline
skinparam useGUILegend false

' Remove stereotypes
hide stereotype

' Define the OBDII class
class OBDII {
    + rpmCommand : static String
    + coolantTempCommand : static String
    + intakeAirTempCommand : static String
    # response : String
    # rmpExpectedResponse : String
    # coolantTempExpectedResponse : String
    # intakeAirTempExpectedResponse : String
    # atzCommand : static final String
    # ate0Command : static final String
    # atl0Command : static final String
    # rpmCommand : static final String
    # coolantTempCommand : static final String
    # intakeAirTempCommand : static final String

    + setupCommunication() : void
    + initializeConnection() : void
    + requestRPMData() : String
    + requestCoolantTemp() : String
    + requestIntakeAirTemp() : String
    + processRPMResponse(String) : String
    + processCoolantTempResponse(String) : String
    + processIntakeAirTempResponse(String) : String
}

' Define the Bluetooth class
class Bluetooth {
    + macAddress : String
    + deviceName : String
    + isConnected : boolean
    # socket : BluetoothSocket
    + inputStream : InputStream
    + outputStream : OutputStream
    # UUID_SERIAL_PORT : static final UUID

    + getMacAddress() : String
    + getDeviceName() : String
    + setMacAddress(String) : void
    + setDeviceName(String) : void
    + sendATCommand(cmd : String) : void
    + waitForPrompt() : String
    + getConnectedDeviceMac() : String
    + getConnectedDeviceName() : String
    + connect(address : String) : void
    + disconnect() : void
    + getOBDPairedDeviceMacAddress(String) : String
}

' Define the BluetoothDeviceListActivity class
class BluetoothDeviceListActivity {
    - setupDeviceList() : void
    - getPairedDevices() : void
    - selectBluetoothDevice(address : String) : void
    - onActivityResult(int, int, Intent) : void
    - createFakeDeviceList() : void
}

' Define the ECockpitDashboard class
class ECockpitDashboard {
    - debugView : boolean 
    - rpmRequestCount : int
    - isBlinking : boolean 

    # initializeOBDConnection() : void
    # setDebugView(boolean) : void
    # startRequestLoop() : void
    # stopRequestLoop() : void
    - setRPM(value : int) : void
    - setCoolantTemp(value : int) : void
    - setIntakeAirTemp(value : int) : void
    # launchTest() : void
    # rpmLED(int) : void
    # setBlinking() : void
    # stopBlinking() : void
}

' Define the MainActivity class
class MainActivity {
    # bluetooth : Bluetooth
    + emulatorMode : boolean
    + OBDIIPaired : final String
    # REQUEST_BLUETOOTH_PERMISSIONS : static final int

    # onCeate(Bundle) : void
    + gotoEcockpitFragment() : void
    # checkDeviceConnection() : void
    # checkBluetoothPermissions() : void
    + onRequestPermissionResult(int, String[], int[]) : void
}

' Add interface icons for activity classes
interface IMainActivity
interface IBluetoothDeviceListActivity
interface IECockpitDashboard

' Relationships with interface icons for each activity class
MainActivity - IMainActivity : <<Activity>>
BluetoothDeviceListActivity - IBluetoothDeviceListActivity : <<Activity>>
ECockpitDashboard - IECockpitDashboard : <<Activity>>

' Define relationships
OBDII "0..*" --> ECockpitDashboard
MainActivity "1..*" --> BluetoothDeviceListActivity
MainActivity "1..1" --> ECockpitDashboard
Bluetooth "1..*" --> OBDII
Bluetooth "1..*" --> BluetoothDeviceListActivity

@enduml

